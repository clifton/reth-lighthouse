name: 'reth'

services:
  reth:
    restart: unless-stopped
    image: ghcr.io/paradigmxyz/reth
    ports:
      - '9001:9001' # metrics
      - '30303:30303' # eth/66 peering
      - '8545:8545' # rpc
      - '8551:8551' # engine
    volumes:
      - rethdata_mainnet:/root/.local/share/reth/mainnet
      - rethdata_sepolia:/root/.local/share/reth/sepolia
      - rethlogs:/root/rethlogs
      - ./jwttoken:/root/jwt:ro
    # For Sepolia, replace `--chain mainnet` with `--chain sepolia`
    command: >
      node
      --chain mainnet
      --metrics 0.0.0.0:9001
      --log.file.directory /root/rethlogs
      --authrpc.addr 0.0.0.0
      --authrpc.port 8551
      --authrpc.jwtsecret /root/jwt/jwt.hex
      --http --http.addr 0.0.0.0 --http.port 8545
      --http.api "eth,net,web3"

  prometheus:
    restart: unless-stopped
    image: prom/prometheus
    depends_on:
      - reth
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheusdata:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus

  grafana:
    restart: unless-stopped
    image: grafana/grafana
    depends_on:
      - reth
      - prometheus
    ports:
      - 3000:3000
    environment:
      PROMETHEUS_URL: http://prometheus:9090
    volumes:
      - grafanadata:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning_temp/dashboards
    # 1. Copy dashboards from temp directory to prevent modifying original host files
    # 2. Replace Prometheus datasource placeholder with the actual name
    # 3. Run Grafana
    entrypoint: >
      sh -c "cp -r /etc/grafana/provisioning_temp/dashboards/. /etc/grafana/provisioning/dashboards &&
             find /etc/grafana/provisioning/dashboards/ -name '*.json' -exec sed -i 's/$${DS_PROMETHEUS}/Prometheus/g' {} \+ &&
             /run.sh"

  lighthouse:
    restart: unless-stopped
    image: sigp/lighthouse:latest
    depends_on:
      - reth
      - mev-boost
    environment:
      - FEE_RECIPIENT="${FEE_RECIPIENT}"
    ports:
      - '5052:5052/tcp' # rpc
      - '5053:5053/tcp'
      - '5054:5054/tcp' # metrics
      - '9000:9000/tcp' # p2p
      - '9000:9000/udp' # p2p
    volumes:
      - lighthousedata:/root/.lighthouse
      - ./jwttoken:/root/jwt:ro
    # For Sepolia:
    # - Replace `--network mainnet` with `--network sepolia`
    # - Use different checkpoint sync URL: `--checkpoint-sync-url https://sepolia.checkpoint-sync.ethpandaops.io`
    command: >
      lighthouse bn
      --network mainnet
      --staking --validator-monitor-auto
      --suggested-fee-recipient $FEE_RECIPIENT
      --builder http://mev-boost:18550
      --http --http-address 0.0.0.0
      --execution-endpoint http://reth:8551
      --metrics --metrics-address 0.0.0.0
      --execution-jwt /root/jwt/jwt.hex
      --checkpoint-sync-url https://mainnet.checkpoint.sigp.io

  mev-boost:
    image: flashbots/mev-boost:latest
    restart: unless-stopped
    ports:
      - "18550:18550"
    environment:
      - MEV_BOOST_RELAYS="${MEV_BOOST_RELAYS}"
    command: >-
      -addr 0.0.0.0:18550 -mainnet -relay-check -relays $MEV_BOOST_RELAYS

  metrics-exporter:
    restart: unless-stopped
    image: ethpandaops/ethereum-metrics-exporter:debian-latest
    depends_on:
      - reth
      - lighthouse
    ports:
      - 9091:9091 # metrics
    volumes:
      - ./ethereum-metrics-exporter/config.yaml:/root/config.yaml
    command:
      - --config=/root/config.yaml
      - --metrics-port=9091

volumes:
  rethdata_mainnet:
    driver: local
  rethdata_sepolia:
    driver: local
  rethlogs:
    driver: local
  prometheusdata:
    driver: local
  grafanadata:
    driver: local
  lighthousedata:
    driver: local
